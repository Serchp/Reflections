*_How did viewing a diff between two versions of a file help you see the bug that was introduced?

Pues es un método curioso, porque si miraras uno por uno, en unos textos tan largos, podrías volverte loco. Que haya un método que lo haga automáticamente es un verdadero acierto

*_How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Pues mira, no tengo ni idea de cómo va a influirme para ser mejor programador, de hecho no he programado casi nada en mi vida como para considerarme "2"programador". Pero claro, si consideramos que algo escrito antes funciona mejor que la nueva versión es interesante poder volver a atrás de algún modo...

*_What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

En los pros claramente se encuentran que puedes guardar o salvar en los momentos clave, cuando se han hecho cambios significativos en el programa. Al guardar de forma automática se puede guardar a mitad de un cambio y enntonces no tener un significado claro el archivo guardado.

*_Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Muchas veces puede haber una correlación o dependencia entre archivos que haga necesario considerarlos a todos en conjunto en vez de por separado

*_How can you use the commands git log and git diff to view the history of files?

El git log lo utilizo para ver todos los commits que se han realizado, es decir para ver los puntos de guardado. Cuando voy leyendo el log puedo averiguar donde se han realizado los cambios que me interesan y ver el ID. Con el git diff ID1 ID2 averiguo las diferencias entre dos commits

*_How might using version control make you more confident to make changes that could break something?

 No sé si a estas alturas estoy muy "confident" pero al menos con el git checkout puedo viajar entre commits y así ir viendo dónde puede estar el error.

 *_Now that you have your workspace set up, what do you want to try using Git for?

 Bueno, todavía no tengo el workspace como quiero, los cambios (colores y descripción en el prompt que debería conseguir según el tuto de Udacity no me sale), tengo una discrepancia entre el clickderecho desde el escritorio y abrir el programa en windowsbash...
 Pues quiero aprender y usar el git para desarrollar programas propios!